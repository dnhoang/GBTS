@{
    ViewBag.Title = "Báo cáo thu nhập";
    List<Green_Bus_Ticket_System_Data.BusRoute> busroutes = 
        (List<Green_Bus_Ticket_System_Data.BusRoute>)ViewBag.Busroutes;

}
@section CustomCss{
    <style>
        .table-condensed thead tr:nth-child(2),
        .table-condensed tbody {
          display: none
        }
    </style>    
}

<div class="container-padding" style="overflow: hidden;">
    <div class="col col-md-12 gb-padding text-center">
        <div class="form-inline reportform">
            <div class="form-group">
                <label for="beginDate" class="form-label">TỪ NGÀY</label>
                <div class="input-prepend input-group">
                    <span class="add-on input-group-addon"><i class="fa fa-calendar"></i></span>
                    <input type="text" id="date-picker-begin" class="form-control active hdateinput" readonly value="@ViewBag.BeginDate">
                </div>
            </div>
            <div class="form-group">
                <label for="example2" class="form-label">ĐẾN NGÀY</label>
                <div class="input-prepend input-group">
                    <span class="add-on input-group-addon"><i class="fa fa-calendar"></i></span>
                    <input type="text" id="date-picker-end" class="form-control active hdateinput" readonly value="@ViewBag.EndDate">
                </div>
            </div>
            <div class="form-group">
                <label for="example2" class="form-label">TUYẾN</label>
                <div class="input-prepend input-group">
                    <select class="form-control" id="route">
                        @foreach(var item in busroutes)
                        {
                            <option value="@item.Id">@item.Code - @item.Name</option>
                        }
                    </select>
                </div>
            </div>
            <button type="button" class="btn btn-default" id="get-report"><i class="fa fa-search"></i></button>
        </div>
    </div>
    <div class="panel-body margin-t-20 margin-b-20 text-center" style="border: 1px solid #ddd; overflow: auto;">
        <h3>DOANH THU BÁN VÉ</h3>
        <div class="ct-chart ct-perfect-fourth"></div>
    </div>
    <div class="panel-body" id="data" style="border: 1px solid #ddd; overflow: auto;">

        

    </div>
    
</div>

@section CustomJs{
    <!-- ================================================
    Moment.js
    ================================================ -->
    <script type="text/javascript" src="~/Content/front/js/moment/moment.min.js"></script>

    <!-- ================================================
    Bootstrap Date Range Picker
    ================================================ -->
    <script type="text/javascript" src="~/Content/front/js/date-range-picker/daterangepicker.js"></script>
    <!-- ================================================
    Data Tables
    ================================================ -->
    <script src="~/Content/front/js/datatables/datatables.min.js"></script>

    <!-- ================================================
    Sweet Alert
    ================================================ -->
    <script src="~/Content/front/js/sweet-alert/sweet-alert.min.js"></script>
    <script src="~/Content/front/js/chartist/chartist.js"></script>
    <script>
        var options = {
            height: 300,
            axisY: {
                // Lets offset the chart a bit from the labels
                offset: 100,
                // The label interpolation function enables you to modify the values
                // used for the labels on each axis. Here we are converting the
                // values into million pound.
                labelInterpolationFnc: function (value) {
                    return  value + ' đ';
                }
            },
            lineSmooth: Chartist.Interpolation.simple({
                divisor: 2
            }),
        };

        var data = {
            labels: [],
            series: [
              []
            ]
        };

        // Create a new line chart object where as first parameter we pass in a selector
        // that is resolving to our chart container element. The Second parameter
        // is the actual data object.
        var chart = new Chartist.Line('.ct-chart', data, options);

        // Let's put a sequence number aside so we can use it in the event callbacks
        var seq = 0,
          delays = 20,
          durations = 50;

        // Once the chart is fully created we reset the sequence
        chart.on('created', function () {
            seq = 0;
        });


        // On each drawn element by Chartist we use the Chartist.Svg API to trigger SMIL animations
        chart.on('draw', function (data) {
            seq++;

            if (data.type === 'line') {
                // If the drawn element is a line we do a simple opacity fade in. This could also be achieved using CSS3 animations.
                data.element.animate({
                    opacity: {
                        // The delay when we like to start the animation
                        begin: seq * delays + 1000,
                        // Duration of the animation
                        dur: durations,
                        // The value where the animation should start
                        from: 0,
                        // The value where it should end
                        to: 1
                    }
                });
            } else if (data.type === 'label' && data.axis === 'x') {
                data.element.animate({
                    y: {
                        begin: seq * delays,
                        dur: durations,
                        from: data.y + 100,
                        to: data.y,
                        // We can specify an easing function from Chartist.Svg.Easing
                        easing: 'easeOutQuart'
                    }
                });
            } else if (data.type === 'label' && data.axis === 'y') {
                data.element.animate({
                    x: {
                        begin: seq * delays,
                        dur: durations,
                        from: data.x - 100,
                        to: data.x,
                        easing: 'easeOutQuart'
                    }
                });
            } else if (data.type === 'point') {
                data.element.animate({
                    x1: {
                        begin: seq * delays,
                        dur: durations,
                        from: data.x - 10,
                        to: data.x,
                        easing: 'easeOutQuart'
                    },
                    x2: {
                        begin: seq * delays,
                        dur: durations,
                        from: data.x - 10,
                        to: data.x,
                        easing: 'easeOutQuart'
                    },
                    opacity: {
                        begin: seq * delays,
                        dur: durations,
                        from: 0,
                        to: 1,
                        easing: 'easeOutQuart'
                    }
                });
            } 
        });

        
        

        $('#date-picker-begin').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            format: 'DD/MM/YYYY',
            maxDate: new Date()

        }).on('hide.daterangepicker', function (ev, picker) {
            $('.table-condensed tbody tr td').filter(function () {
                return $(this).html() === "1";
            }).click();
        });

        var CurrentDate = new Date();
        CurrentDate.setMonth(CurrentDate.getMonth() + 1);

        $('#date-picker-end').daterangepicker({
            singleDatePicker: true,
            showDropdowns: true,
            format: 'DD/MM/YYYY',
            maxDate: CurrentDate
        }).on('hide.daterangepicker', function (ev, picker) {
            $('.table-condensed tbody tr td').filter(function () {
                return $(this).html() === "1";
            }).click();
        });


        $("#get-report").click(function () {
            var beginDate = $('#date-picker-begin').val();
            var endDate = $('#date-picker-end').val();
            var route = $("#route").val();
            $("#get-report").html('<i class="fa fa-spinner fa-pulse fa-fw"></i>');
            $(".report").html("");
            $.ajax({
                url: "/Manager/Report/GetReport",
                dataType: "html",
                data: { beginDate: beginDate, endDate: endDate, route: route },
                method: "GET",
                success: function (data) {
         
                        $("#data").html(data);
                    /*
                        $('#card-table').DataTable().destroy();
                        $('#cash-table').DataTable().destroy();

                        $('#card-table').DataTable({
                            'order': [],
                            'aLengthMenu': [[10, 50, 100, -1], [10, 50, 100, 'All']],
                            'iDisplayLength': 10,
                            columnDefs: [
                                { width: 100, className: "dt-center", targets: 1 },
                                { width: 150, className: "dt-center", targets: 2 }
                            ]
                        });

                        $('#cash-table').DataTable({
                            'order': [],
                            'aLengthMenu': [[10, 50, 100, -1], [10, 50, 100, 'All']],
                            'iDisplayLength': 10,
                            columnDefs: [
                                { width: 100, className: "dt-center", targets: 1 },
                                { width: 150, className: "dt-center", targets: 2 }
                            ]
                        });
                     */
                        drawChart();

                        $("#get-report").html('<i class="fa fa-search"></i>');


                }
            });

        });

        function drawChart() {
            var beginDate = $('#date-picker-begin').val();
            var endDate = $('#date-picker-end').val();
            var route = $("#route").val();
            $.ajax({
                url: "/Manager/Report/DrawChart",
                dataType: "json",
                data: { beginDate: beginDate, endDate: endDate, route: route },
                method: "GET",
                success: function (response) {
                    if (response.success) {
                        var newdata = {
                            labels: response.lables,
                            series: [
                              response.incomes
                            ]
                        };
                        chart.update(newdata, options);
                    } else {
                        swal({
                            title: "",
                            text: response.message,
                            type: "warning"
                        });
                    }
                    
                }
            });

        }

        $("#get-report").trigger("click");

    </script>
}